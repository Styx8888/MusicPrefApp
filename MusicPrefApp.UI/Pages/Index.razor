@page "/"
@using MusicPrefApp.UI.Pages.Components;
@using MusicPrefApp.UI.State
@using FluentValidation
@using MusicPrefApp.UI.Models
@using Severity = MudBlazor.Severity

<MudGrid>
    <MudItem xs="12" sm="12">
        <MudPaper Class="pa-4">
            <MudForm Model="AppState.AnswersModel" @ref="form">
                <NameQuestionComponent/>
                <GenreQuestionComponent/>
                <ArtistQuestionComponent/>
                <TracksQuestionComponent/>
            </MudForm>
        </MudPaper>
        <MudCardActions>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto" OnClick="@(Submit)">Get Recommendations</MudButton>
            <MudButton Variant="Variant.Filled" Color="Color.Secondary" Class="mx-2" OnClick="@(Reset)">Reset</MudButton>
        </MudCardActions>
    </MudItem>
</MudGrid>

@code {
    MudForm form;

    [Inject] ISnackbar Snackbar { get; set; }

    [Inject] AppState AppState { get; set; }

    [Inject] IValidator<AnswersModel> Validator { get; set; }

    [Inject] NavigationManager NavigationManager { get; set; }

    private void Reset()
    {
        AppState.ClearAll();
        form.Reset();
        StateHasChanged();
    }

    private void Submit()
    {
        var result = Validator.Validate(AppState.AnswersModel);
        if (result.IsValid)
        {
            NavigationManager.NavigateTo("/recommendations");
        }
        else
        {
            foreach (var error in result.Errors)
            {
                Snackbar.Add(error.ErrorMessage, Severity.Error);
            }
        }
    }

}